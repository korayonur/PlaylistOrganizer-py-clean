from typing import Dict

from pydantic import BaseModel


class CharacterMap(BaseModel):
    """Karakter dönüşüm haritası"""

    mapping: Dict[str, str] = {
        # Türkçe karakterler
        "ğ": "g",
        "ı": "i",
        "ş": "s",
        "ü": "u",
        "ö": "o",
        "ç": "c",
        "İ": "I",
        "Ğ": "G",
        "Ü": "U",
        "Ş": "S",
        "Ö": "O",
        "Ç": "C",
        # Latin Alfabesi Genişletilmiş
        "à": "a",
        "á": "a",
        "â": "a",
        "ã": "a",
        "ä": "a",
        "å": "a",
        "æ": "ae",
        "ć": "c",
        "č": "c",
        "è": "e",
        "é": "e",
        "ê": "e",
        "ë": "e",
        "ì": "i",
        "í": "i",
        "î": "i",
        "ï": "i",
        "ñ": "n",
        "ò": "o",
        "ó": "o",
        "ô": "o",
        "õ": "o",
        "ø": "o",
        "ù": "u",
        "ú": "u",
        "û": "u",
        "ý": "y",
        "ÿ": "y",
        # Özel karakterler
        "–": "-",
        "—": "-",
        "_": " ",
        ".": " ",
        ",": " ",
        ";": " ",
        ":": " ",
        "!": " ",
        "?": " ",
        "(": " ",
        ")": " ",
        "[": " ",
        "]": " ",
        "{": " ",
        "}": " ",
        "<": " ",
        ">": " ",
        "/": " ",
        "\\": " ",
        "|": " ",
        "+": " ",
        "=": " ",
        "*": " ",
        "&": " ",
        "^": " ",
        "%": " ",
        "$": " ",
        "#": " ",
        "@": " ",
        "~": " ",
        "`": " ",
        "'": " ",
        '"': " ",
    }

    def normalize(self, text: str) -> str:
        """Metni normalize eder"""
        return "".join(self.mapping.get(c, c) for c in text)
